{"version":3,"sources":["api/users.js","api/categories.js","components/Table.jsx","App.jsx","api/products.js","index.jsx"],"names":["id","name","sex","title","icon","ownerId","SORT_DEFAULT","SORT_ASC","SORT_DESC","SORT_BY_ID","SORT_BY_CATEGORY","SORT_BY_PRODUCT","SORT_BY_USER","ProductTable","products","useState","sortedColName","setSortedColName","sortDirection","setSortDirection","sortedProducts","col","direction","copyProducts","sort","product1","product2","localeCompare","category","user","reverse","sortProducts","handleSortClick","sortType","setClassNamesForIcon","type","colName","className","href","onClick","cn","map","product","categoryId","categoriesFromServer","find","currentCategory","usersFromServer","currentUser","App","selectedUserId","setSelectedUserId","selectedCategoriesId","setSelectedCategoriesId","query","setQuery","preparedProducts","filter","normalizedQuery","toLowerCase","trim","includes","length","filterProducts","isNotFound","placeholder","value","onChange","event","target","filteredCategories","handleCategoryClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.22f0fdf8.chunk.js","sourcesContent":["export default [\n  { id: 1, name: 'Roma', sex: 'm' },\n  { id: 2, name: 'Anna', sex: 'f' },\n  { id: 3, name: 'Max', sex: 'm' },\n  { id: 4, name: 'John', sex: 'm' },\n];\n","export default [\n  {\n    id: 1,\n    title: 'Grocery',\n    icon: '🍞',\n    ownerId: 2,\n  },\n  {\n    id: 2,\n    title: 'Drinks',\n    icon: '🍺',\n    ownerId: 1,\n  },\n  {\n    id: 3,\n    title: 'Fruits',\n    icon: '🍏',\n    ownerId: 2,\n  },\n  {\n    id: 4,\n    title: 'Electronics',\n    icon: '💻',\n    ownerId: 1,\n  },\n  {\n    id: 5,\n    title: 'Clothes',\n    icon: '👚',\n    ownerId: 3,\n  },\n];\n","import cn from 'classnames';\nimport { useState } from 'react';\n\nconst SORT_DEFAULT = 'fa-sort';\nconst SORT_ASC = 'fa-sort-up';\nconst SORT_DESC = 'fa-sort-down';\nconst SORT_BY_ID = 'id';\nconst SORT_BY_CATEGORY = 'category';\nconst SORT_BY_PRODUCT = 'product';\nconst SORT_BY_USER = 'user';\n\nconst sortProducts = (products, col, direction) => {\n  const copyProducts = [...products];\n\n  switch (col) {\n    case SORT_BY_ID:\n      copyProducts.sort((product1, product2) => (\n        product1.id - product2.id));\n      break;\n\n    case SORT_BY_PRODUCT:\n      copyProducts.sort((product1, product2) => (\n        product1.name.localeCompare(product2.name)));\n      break;\n\n    case SORT_BY_CATEGORY:\n      copyProducts.sort((product1, product2) => (\n        product1.category.title.localeCompare(product2.category.title)));\n      break;\n\n    case SORT_BY_USER:\n      copyProducts.sort((product1, product2) => (\n        product1.user.name.localeCompare(product2.user.name)));\n      break;\n\n    default:\n      return copyProducts;\n  }\n\n  if (direction === SORT_DESC) {\n    return copyProducts.reverse();\n  }\n\n  if (direction === SORT_DEFAULT) {\n    return products;\n  }\n\n  return copyProducts;\n};\n\nexport const ProductTable = ({ products }) => {\n  const [sortedColName, setSortedColName] = useState('');\n  const [sortDirection, setSortDirection] = useState(SORT_DEFAULT);\n  const sortedProducts = sortProducts(products, sortedColName, sortDirection);\n\n  const handleSortClick = (sortType) => {\n    setSortedColName(sortType);\n\n    if (sortType !== sortedColName && sortType !== '') {\n      setSortDirection(SORT_ASC);\n\n      return 0;\n    }\n\n    switch (sortDirection) {\n      case SORT_DEFAULT:\n        return setSortDirection(SORT_ASC);\n\n      case SORT_ASC:\n        return setSortDirection(SORT_DESC);\n\n      default:\n        return setSortDirection(SORT_DEFAULT);\n    }\n  };\n\n  const setClassNamesForIcon = (type, colName) => {\n    if (sortDirection === type && sortedColName === colName) {\n      return true;\n    }\n\n    return false;\n  };\n\n  return (\n    <table\n      data-cy=\"ProductTable\"\n      className=\"table is-striped is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              ID\n\n              <a\n                href=\"#/\"\n                onClick={() => handleSortClick(SORT_BY_ID)}\n              >\n                <span className=\"icon\">\n                  <i\n                    data-cy=\"SortIcon\"\n                    className={cn('fas', {\n                      'fa-sort': setClassNamesForIcon(SORT_DEFAULT, SORT_BY_ID)\n                        || sortedColName !== SORT_BY_ID,\n                      'fa-sort-up': setClassNamesForIcon(SORT_ASC, SORT_BY_ID),\n                      'fa-sort-down': setClassNamesForIcon(\n                        SORT_DESC,\n                        SORT_BY_ID,\n                      ),\n                    })}\n                  />\n                </span>\n              </a>\n            </span>\n          </th>\n\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Product\n\n              <a\n                href=\"#/\"\n                onClick={() => handleSortClick(SORT_BY_PRODUCT)}\n              >\n                <span className=\"icon\">\n                  <i\n                    data-cy=\"SortIcon\"\n                    className={cn('fas', {\n                      'fa-sort': setClassNamesForIcon(\n                        SORT_DEFAULT,\n                        SORT_BY_PRODUCT,\n                      )\n                        || sortedColName !== SORT_BY_PRODUCT,\n                      'fa-sort-up': setClassNamesForIcon(\n                        SORT_ASC,\n                        SORT_BY_PRODUCT,\n                      ),\n                      'fa-sort-down': setClassNamesForIcon(\n                        SORT_DESC,\n                        SORT_BY_PRODUCT,\n                      ),\n                    })}\n                  />\n                </span>\n              </a>\n            </span>\n          </th>\n\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Category\n\n              <a\n                href=\"#/\"\n                onClick={() => handleSortClick(SORT_BY_CATEGORY)}\n              >\n                <span className=\"icon\">\n                  <i\n                    data-cy=\"SortIcon\"\n                    className={cn('fas', {\n                      'fa-sort': setClassNamesForIcon(\n                        SORT_DEFAULT,\n                        SORT_BY_CATEGORY,\n                      )\n                        || sortedColName !== SORT_BY_CATEGORY,\n                      'fa-sort-up': setClassNamesForIcon(\n                        SORT_ASC,\n                        SORT_BY_CATEGORY,\n                      ),\n                      'fa-sort-down': setClassNamesForIcon(\n                        SORT_DESC,\n                        SORT_BY_CATEGORY,\n                      ),\n                    })}\n                  />\n                </span>\n              </a>\n            </span>\n          </th>\n\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              User\n\n              <a\n                href=\"#/\"\n                onClick={() => handleSortClick(SORT_BY_USER)}\n              >\n                <span className=\"icon\">\n                  <i\n                    data-cy=\"SortIcon\"\n                    className={cn('fas', {\n                      'fa-sort': setClassNamesForIcon(\n                        SORT_DEFAULT,\n                        SORT_BY_USER,\n                      )\n                        || sortedColName !== SORT_BY_USER,\n                      'fa-sort-up': setClassNamesForIcon(\n                        SORT_ASC,\n                        SORT_BY_USER,\n                      ),\n                      'fa-sort-down': setClassNamesForIcon(\n                        SORT_DESC,\n                        SORT_BY_USER,\n                      ),\n                    })}\n                  />\n                </span>\n              </a>\n            </span>\n          </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {sortedProducts.map(product => (\n          <tr\n            key={product.id}\n            data-cy=\"Product\"\n          >\n            <td className=\"has-text-weight-bold\" data-cy=\"ProductId\">\n              {product.id}\n            </td>\n\n            <td data-cy=\"ProductName\">\n              {product.name}\n            </td>\n            <td data-cy=\"ProductCategory\">\n              {`${product.category.icon} - ${product.category.title}`}\n            </td>\n\n            <td\n              data-cy=\"ProductUser\"\n              className={cn({\n                'has-text-danger': product.user.sex === 'f',\n                'has-text-link': product.user.sex === 'm',\n              })}\n            >\n              {product.user.name}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport cn from 'classnames';\n\nimport usersFromServer from './api/users';\nimport categoriesFromServer from './api/categories';\nimport productsFromServer from './api/products';\nimport { ProductTable } from './components/Table';\n\nconst products = productsFromServer.map((product) => {\n  const category = categoriesFromServer.find(currentCategory => (\n    product.categoryId === currentCategory.id));\n  const user = usersFromServer.find(currentUser => (\n    category.ownerId === currentUser.id));\n\n  return {\n    ...product,\n    user,\n    category,\n  };\n});\n\nconst filterProducts = (query, selectedUserId, selectedCategoriesId) => {\n  let copyProducts = [...products];\n\n  if (query) {\n    copyProducts = copyProducts.filter((product) => {\n      const normalizedQuery = query.toLowerCase().trim();\n      const normalizedProductName = product.name.toLowerCase().trim();\n\n      return normalizedProductName.includes(normalizedQuery);\n    });\n  }\n\n  if (selectedUserId) {\n    copyProducts = copyProducts.filter(product => (\n      product.user.id === selectedUserId));\n  }\n\n  if (selectedCategoriesId.length > 0) {\n    copyProducts = copyProducts.filter(product => (\n      selectedCategoriesId.includes(product.categoryId)));\n  }\n\n  return copyProducts;\n};\n\nexport const App = () => {\n  const [selectedUserId, setSelectedUserId] = useState(0);\n  const [selectedCategoriesId, setSelectedCategoriesId] = useState([]);\n  const [query, setQuery] = useState('');\n\n  const handleCategoryClick = (categoryId) => {\n    const isCategorySelected = selectedCategoriesId\n      .find(id => categoryId === id);\n\n    if (isCategorySelected) {\n      const filteredCategories = selectedCategoriesId\n        .filter(id => id !== categoryId);\n\n      setSelectedCategoriesId(filteredCategories);\n    } else {\n      setSelectedCategoriesId([...selectedCategoriesId, categoryId]);\n    }\n  };\n\n  const preparedProducts = filterProducts(\n    query,\n    selectedUserId,\n    selectedCategoriesId,\n  );\n\n  const resetAllFilters = () => {\n    setSelectedUserId(0);\n    setSelectedCategoriesId([]);\n    setQuery('');\n  };\n\n  const isNotFound = (query\n    || selectedUserId\n    || selectedCategoriesId.length > 0\n  ) && preparedProducts.length === 0;\n\n  return (\n    <div className=\"section\">\n      <div className=\"container\">\n        <h1 className=\"title\">Product Categories</h1>\n\n        <div className=\"block\">\n          <nav className=\"panel\">\n            <p className=\"panel-heading\">Filters</p>\n\n            <p className=\"panel-tabs has-text-weight-bold\">\n              <a\n                data-cy=\"FilterAllUsers\"\n                href=\"#All\"\n                className={cn({\n                  'is-active': selectedUserId === 0,\n                })}\n                onClick={() => setSelectedUserId(0)}\n              >\n                All\n              </a>\n\n              {usersFromServer.map(user => (\n                <a\n                  className={cn({\n                    'is-active': selectedUserId === user.id,\n                  })}\n                  key={user.id}\n                  data-cy=\"FilterUser\"\n                  href={`#${user.name}`}\n                  onClick={() => setSelectedUserId(user.id)}\n                >\n                  {user.name}\n                </a>\n              ))}\n            </p>\n\n            <div className=\"panel-block\">\n              <p className=\"control has-icons-left has-icons-right\">\n                <input\n                  data-cy=\"SearchField\"\n                  type=\"text\"\n                  className=\"input\"\n                  placeholder=\"Search\"\n                  value={query}\n                  onChange={event => setQuery(event.target.value)}\n                />\n\n                <span className=\"icon is-left\">\n                  <i className=\"fas fa-search\" aria-hidden=\"true\" />\n                </span>\n\n                {query !== '' && (\n                  <span className=\"icon is-right\">\n                    {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n                    <button\n                      data-cy=\"ClearButton\"\n                      type=\"button\"\n                      className=\"delete\"\n                      onClick={() => setQuery('')}\n                    />\n                  </span>\n                )}\n              </p>\n            </div>\n\n            <div className=\"panel-block is-flex-wrap-wrap\">\n              <a\n                href=\"#All\"\n                data-cy=\"AllCategories\"\n                className={cn('button', 'is-success', 'mr-6', {\n                  'is-outlined': selectedCategoriesId.length > 0,\n                })}\n                onClick={() => setSelectedCategoriesId([])}\n              >\n                All\n              </a>\n\n              {categoriesFromServer.map(category => (\n                <a\n                  key={category.id}\n                  data-cy=\"Category\"\n                  className={cn('button', 'mr-2', 'my-1', {\n                    'is-info': selectedCategoriesId.includes(category.id),\n                  })}\n                  href={`#${category.title}`}\n                  onClick={() => handleCategoryClick(category.id)}\n                >\n                  {category.title}\n                </a>\n              ))}\n            </div>\n\n            <div className=\"panel-block\">\n              <a\n                data-cy=\"ResetAllButton\"\n                href=\"#/\"\n                className=\"button is-link is-outlined is-fullwidth\"\n                onClick={() => resetAllFilters()}\n              >\n                Reset all filters\n              </a>\n            </div>\n          </nav>\n        </div>\n\n        <div className=\"box table-container\">\n          {isNotFound\n            ? (\n              <p data-cy=\"NoMatchingMessage\">\n                No products matching selected criteria\n              </p>\n            ) : (\n              <ProductTable products={preparedProducts} />\n            )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Milk',\n    categoryId: 2,\n  },\n  {\n    id: 2,\n    name: 'Bread',\n    categoryId: 1,\n  },\n  {\n    id: 3,\n    name: 'Eggs',\n    categoryId: 1,\n  },\n  {\n    id: 4,\n    name: 'Jacket',\n    categoryId: 5,\n  },\n  {\n    id: 5,\n    name: 'Sugar',\n    categoryId: 1,\n  },\n  {\n    id: 6,\n    name: 'Banana',\n    categoryId: 3,\n  },\n  {\n    id: 7,\n    name: 'Beer',\n    categoryId: 2,\n  },\n  {\n    id: 8,\n    name: 'Socks',\n    categoryId: 5,\n  },\n  {\n    id: 9,\n    name: 'Apples',\n    categoryId: 3,\n  },\n];\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}